version: '3.4'

services:
  nginx-80:
    image: nginx:alpine
    container_name: nginx-80
    ports:
      - "80:80"
    restart: "unless-stopped"
    depends_on:
      - openmu-startup
    volumes:
      - ./nginx.prod80.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot/:ro

# We add another nginx here, just for HTTPs.
# The reason is, that it's not starting when we combine port 80 and 443 until
# the certificates are created.
# So, when running the certbot the first time, we need to be able to access
# the port 80 - and we solve this by separating the server configs.
  nginx-443:
    container_name: nginx-443
    build:
      dockerfile: Dockerfile
      context: ../../client
    ports:
      - "443:443"
    depends_on:
      - openmu-startup
    volumes:
      - ./nginx.prod443.conf:/etc/nginx/nginx.conf:ro
      - ./.htpasswd:/etc/nginx/.htpasswd
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  cms-api:
    container_name: cms-api
    build:
      dockerfile: Dockerfile
      context: ../../server
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: openmu
      DB_USERNAME: postgres
      DB_PASSWORD: admin
      ADMIN_PANEL_HOST: openmu-startup
      ADMIN_PANEL_PORT: 8080
      ADMIN_PANEL_USERNAME: admin
      ADMIN_PANEL_PASSWORD: openmu
    restart: "unless-stopped"
    ports:
      - "8080"

  openmu-startup:
    image: munique/openmu
    container_name: openmu-startup
    ports:
      - "8080"
      - "55901:55901"
      - "55902:55902"
      - "55903:55903"
      - "44405:44405"
      - "55980:55980"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      DB_HOST: database
      DB_ADMIN_PW: admin
      ASPNETCORE_URLS: http://+:8080
    working_dir: /app/
    restart: "unless-stopped"
    volumes:
      - ./.htpasswd:/etc/nginx/.htpasswd

  database:
    image: postgres
    container_name: database
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: openmu
      POSTGRES_USER: postgres
    ports:
      - "5432"
    volumes:
      - dbdata:/var/lib/postgresql/data #store data on volume

volumes:
  dbdata: